from sklearn.svm import SVC
import numpy as np
import csv
import matplotlib.pyplot as plt
from sklearn import svm, datasets
#Assumed you have, X (predictor) and Y (target) for training data set and x_test(predictor) of test_dataset
# Create SVM classification object 


def load_data(filename):
	dataset = list()
	with open(filename,'r') as filen:
		data_reader = csv.reader(filen)
		for row in data_reader:
			if not row:
				continue
			dataset.append(row)
		dataset.pop(0)
	return dataset

def loadCsv(filename):
	lines = csv.reader(open(filename, "rb"))
	dataset = list(lines)
	for i in range(len(dataset)):
		dataset[i] = [float(x) for x in dataset[i]]
	return dataset

def label_to_int(dataset,rows,cols):
	for i in range(rows):
		for j in range(cols):
			if(dataset[i][j]=="Yes"):
				dataset[i][j]=1
			elif (dataset[i][j]=="No"):
				dataset[i][j]=0
'''def label_to_int(dataset,rows,cols):
	for i in range(rows):
		if(dataset[i][cols-1]=="Iris-setosa"):
			dataset[i][cols-1]=0;
		else:
			#elif (dataset[i][j]=="No"):
			dataset[i][cols-1]=1;'''

def string_to_float(dataset,rows,cols):
	for i in range(rows):
		for j in range(cols):
			dataset[i][j]=float(dataset[i][j])

'''def string_to_float(dataset,rows,cols):
	for i in range(rows):
		for j in range(cols):
			dataset[i][j]=float(dataset[i][j])'''


filename = 'spectf1.csv'

dataset = load_data(filename)
rows = len(dataset)
cols = len(dataset[0])
label_to_int(dataset,rows,cols)
string_to_float(dataset,rows,cols)

X=[]
y=[]
for i in range(rows):
	y.append(dataset[i][-1])
	del(dataset[i][-1])
	X.append(dataset[i])
print X
print "########################################################"
print y
print "///////////////////////////////////////////////////////////"
model = SVC(kernel='rbf', C=1, gamma=1)
model.fit(X, y)

print(model.score(X, y))
Z= model.predict(X)
