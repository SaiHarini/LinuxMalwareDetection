from sklearn.feature_selection import VarianceThreshold
import numpy as np
import csv
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2
from sklearn.svm import SVC
import matplotlib.pyplot as plt
from sklearn import svm, datasets



def load_data(filename):
    dataset = list()
    with open(filename,'r') as filen:
        data_reader = csv.reader(filen)
        for row in data_reader:
            if not row:
                continue
            dataset.append(row)
        dataset.pop(0)
    return dataset

def loadCsv(filename):
    lines = csv.reader(open(filename, "rb"))
    dataset = list(lines)
    for i in range(len(dataset)):
        dataset[i] = [float(x) for x in dataset[i]]
    return dataset

def label_to_int(dataset,rows,cols):
    for i in range(rows):
        for j in range(cols):
            if(dataset[i][j]=="benign"):
                dataset[i][j]=0
            elif (dataset[i][j]=="virus"):
                dataset[i][j]=1

def string_to_float(dataset,rows,cols):
    for i in range(rows):
        for j in range(cols):
            dataset[i][j]=float(dataset[i][j])


filename = 'dataset.csv'
dataset = load_data(filename)
rows = len(dataset)
cols = len(dataset[0])
label_to_int(dataset,rows,cols)
string_to_float(dataset,rows,cols)

X=[]
y=[]
for i in range(rows):
    y.append(dataset[i][-1])
    del(dataset[i][-1])
    X.append(dataset[i])

X_new = SelectKBest(chi2, k=500).fit_transform(X, y)

X=X_new.tolist()
#print X_new.shape

model = SVC(kernel='linear', C=1, gamma=1)
model.fit(X, y)

print(model.score(X, y))
Z= model.predict(X)
print(type(Z))
